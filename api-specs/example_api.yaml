openapi: 3.0.0
info:
  title: JSONPlaceholder API
  version: 1.0.0
  description: A free fake API for testing and prototyping.
servers:
  - url: https://jsonplaceholder.typicode.com
paths:
  /users:
    get:
      summary: Get all users
      operationId: getAllUsers
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input.
  /users/{id}:
    get:
      summary: Get user by ID
      operationId: getUserById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user to retrieve
      responses:
        '200':
          description: A single user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        username:
          type: string
        email:
          type: string
        address:
          type: object
          properties:
            street:
              type: string
            suite:
              type: string
            city:
              type: string
            zipcode:
              type: string
            geo:
              type: object
              properties:
                lat:
                  type: string
                lng:
                  type: string
        phone:
          type: string
        website:
          type: string
        company:
          type: object
          properties:
            name:
              type: string
            catchPhrase:
              type: string
            bs:
              type: string
      example:
        id: 1
        name: Leanne Graham
        username: Bret
        email: Sincere@april.biz
        address:
          street: Kulas Light
          suite: Apt. 556
          city: Gwenborough
          zipcode: 92998-3874
          geo:
            lat: "-37.3159"
            lng: "81.1496"
        phone: 1-770-736-8031 x56442
        website: hildegard.org
        company:
          name: Romaguera-Crona
          catchPhrase: Multi-layered client-server neural-net
          bs: harness real-time e-markets
    NewUser:
      type: object
      required:
        - name
        - username
        - email
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
      example:
        name: John Doe
        username: johndoe
        email: john.doe@example.com